# Generated by Django 3.0 on 2021-03-09 15:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('answer_id', models.AutoField(db_column='AnswerId', primary_key=True, serialize=False)),
                ('answer_content', models.TextField(db_column='AnswerContent')),
                ('is_correct', models.BooleanField(blank=True, db_column='IsCorrect', null=True)),
            ],
            options={
                'db_table': 'Answer',
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('component_id', models.AutoField(db_column='ComponentId', primary_key=True, serialize=False)),
                ('component_type', models.CharField(db_column='ComponentType', max_length=100)),
                ('direction', models.CharField(db_column='Direction', max_length=10)),
                ('order_key', models.IntegerField(db_column='OrderKey')),
                ('label', models.TextField(blank=True, db_column='Label', null=True)),
            ],
            options={
                'db_table': 'Component',
            },
        ),
        migrations.CreateModel(
            name='HciBackground',
            fields=[
                ('hci_background_id', models.AutoField(db_column='HciBackgroundId', primary_key=True, serialize=False)),
                ('hci_background_description', models.CharField(db_column='HciBackgroundDescription', max_length=50)),
            ],
            options={
                'db_table': 'HciBackground',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('image_id', models.AutoField(db_column='ImageId', primary_key=True, serialize=False)),
                ('image_url', models.TextField(db_column='ImageUrl')),
            ],
            options={
                'db_table': 'Image',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('language_id', models.AutoField(db_column='LanguageId', primary_key=True, serialize=False)),
                ('language_name', models.CharField(db_column='LanguageName', max_length=50)),
                ('language_direction', models.CharField(db_column='LanguageDirection', max_length=10)),
            ],
            options={
                'db_table': 'Language',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('participant_id', models.AutoField(db_column='ParticipantId', primary_key=True, serialize=False)),
                ('sex', models.CharField(blank=True, db_column='Sex', max_length=10, null=True)),
                ('age', models.IntegerField(blank=True, db_column='Age', null=True)),
                ('other_language_proficiency', models.TextField(db_column='OtherLanguageProficiency')),
                ('ltr_proficiency', models.FloatField(db_column='LtrProficiency')),
                ('rtl_proficiency', models.FloatField(db_column='RtlProficiency')),
                ('dominant_hand_writing', models.CharField(blank=True, db_column='DominantHandWriting', max_length=10, null=True)),
                ('dominant_hand_mobile', models.CharField(blank=True, db_column='DominantHandMobile', max_length=10, null=True)),
                ('dominant_hand_web', models.CharField(blank=True, db_column='DominantHandWeb', max_length=10, null=True)),
                ('dominant_hand_mode', models.IntegerField(blank=True, db_column='DominantHandMode', null=True)),
                ('is_rtl_speakers', models.BooleanField(blank=True, db_column='IsRtlSpeakers', null=True)),
                ('is_rtl_interface', models.BooleanField(blank=True, db_column='IsRtlInterface', null=True)),
                ('is_rtl_paper_documents', models.BooleanField(blank=True, db_column='IsRtlPaperDocuments', null=True)),
                ('is_ltr_speakers', models.BooleanField(blank=True, db_column='IsLtrSpeakers', null=True)),
                ('is_ltr_interface', models.BooleanField(blank=True, db_column='IsLtrInterface', null=True)),
                ('is_ltr_paper_documents', models.BooleanField(blank=True, db_column='IsLtrPaperDocuments', null=True)),
                ('is_rtl_and_ltr_interface', models.BooleanField(blank=True, db_column='IsRtlAndLtrInterface', null=True)),
                ('other_prof_experience', models.CharField(blank=True, db_column='OtherProfExperience', max_length=100, null=True)),
                ('hci_experience', models.BooleanField(blank=True, db_column='HciExperience', null=True)),
                ('is_rtl_interfaces_experience', models.BooleanField(blank=True, db_column='IsRtlInterfacesExperience', null=True)),
                ('is_ltr_interfaces_experience', models.BooleanField(blank=True, db_column='IsLtrInterfacesExperience', null=True)),
                ('other_language_working_characteristics', models.CharField(blank=True, db_column='OtherLanguageWorkingCharacteristics', max_length=100, null=True)),
                ('questionnaire_version', models.CharField(blank=True, db_column='QuestionnaireVersion', max_length=10, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=50, null=True)),
                ('operating_system', models.CharField(blank=True, db_column='OperatingSystem', max_length=20, null=True)),
                ('browser_type', models.CharField(blank=True, db_column='BrowserType', max_length=20, null=True)),
                ('hci_background_id', models.ForeignKey(blank=True, db_column='HciBackgroundId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.HciBackground')),
                ('mother_tongue', models.ForeignKey(db_column='MotherTongue', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Language')),
            ],
            options={
                'db_table': 'Participant',
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('questionnaire_id', models.AutoField(db_column='QuestionnaireId', primary_key=True, serialize=False)),
                ('questionnaire_name', models.CharField(blank=True, db_column='QuestionnaireName', max_length=100, null=True)),
                ('hosted_link', models.TextField(blank=True, db_column='HostedLink', null=True)),
                ('is_active', models.BooleanField(db_column='IsActive')),
                ('creation_date', models.DateTimeField(db_column='CreationDate')),
                ('language_id', models.ForeignKey(db_column='LanguageId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Language')),
            ],
            options={
                'db_table': 'Questionnaire',
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireType',
            fields=[
                ('questionnaire_type_id', models.AutoField(db_column='QuestionnaireTypeId', primary_key=True, serialize=False)),
                ('questionnaire_type_name', models.CharField(db_column='QuestionnaireTypeName', max_length=50)),
            ],
            options={
                'db_table': 'QuestionnaireType',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(db_column='TaskId', primary_key=True, serialize=False)),
                ('task_title', models.CharField(db_column='TaskTitle', max_length=100)),
                ('task_content', models.TextField(blank=True, db_column='TaskContent', null=True)),
                ('is_required', models.BooleanField(db_column='IsRequired')),
            ],
            options={
                'db_table': 'Task',
            },
        ),
        migrations.CreateModel(
            name='TaskImage',
            fields=[
                ('task_image_id', models.AutoField(db_column='TaskImageId', primary_key=True, serialize=False)),
                ('image_id', models.ForeignKey(db_column='ImageId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Image')),
                ('task_id', models.ForeignKey(db_column='TaskId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Task')),
            ],
            options={
                'db_table': 'TaskImage',
                'unique_together': {('task_id', 'image_id')},
            },
        ),
        migrations.CreateModel(
            name='TaskComponent',
            fields=[
                ('task_component_id', models.AutoField(db_column='TaskComponentId', primary_key=True, serialize=False)),
                ('component_id', models.ForeignKey(db_column='ComponentId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Component')),
                ('task_id', models.ForeignKey(db_column='TaskId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Task')),
            ],
            options={
                'db_table': 'TaskComponent',
            },
        ),
        migrations.CreateModel(
            name='TaskAnswer',
            fields=[
                ('task_answer_id', models.AutoField(db_column='TaskAnswerId', primary_key=True, serialize=False)),
                ('answer_id', models.ForeignKey(db_column='AnswerId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Answer')),
                ('task_id', models.ForeignKey(db_column='TaskId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Task')),
            ],
            options={
                'db_table': 'TaskAnswer',
                'unique_together': {('task_id', 'answer_id')},
            },
        ),
        migrations.AddField(
            model_name='task',
            name='answers',
            field=models.ManyToManyField(through='rtl_ltr.TaskAnswer', to='rtl_ltr.Answer'),
        ),
        migrations.AddField(
            model_name='task',
            name='components',
            field=models.ManyToManyField(through='rtl_ltr.TaskComponent', to='rtl_ltr.Component'),
        ),
        migrations.AddField(
            model_name='task',
            name='images',
            field=models.ManyToManyField(through='rtl_ltr.TaskImage', to='rtl_ltr.Image'),
        ),
        migrations.CreateModel(
            name='QuestionnaireTask',
            fields=[
                ('questionnaire_task_id', models.AutoField(db_column='QuestionnaireTaskId', primary_key=True, serialize=False)),
                ('questionnaire_id', models.ForeignKey(db_column='QuestionnaireId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Questionnaire')),
                ('task_id', models.ForeignKey(db_column='TaskId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Task')),
            ],
            options={
                'db_table': 'QuestionnaireTask',
                'unique_together': {('questionnaire_id', 'task_id')},
            },
        ),
        migrations.AddField(
            model_name='questionnaire',
            name='questionnaire_type_id',
            field=models.ForeignKey(blank=True, db_column='QuestionnaireTypeId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.QuestionnaireType'),
        ),
        migrations.AddField(
            model_name='questionnaire',
            name='tasks',
            field=models.ManyToManyField(through='rtl_ltr.QuestionnaireTask', to='rtl_ltr.Task'),
        ),
        migrations.CreateModel(
            name='TaskParticipant',
            fields=[
                ('task_participant_id', models.AutoField(db_column='TaskParticipantId', primary_key=True, serialize=False)),
                ('task_direction', models.CharField(blank=True, db_column='TaskDirection', max_length=10, null=True)),
                ('task_time', models.TimeField(db_column='TaskTime')),
                ('task_clicks', models.IntegerField(db_column='TaskClicks')),
                ('task_errors', models.IntegerField(db_column='TaskErrors')),
                ('submitted_free_answer', models.TextField(blank=True, db_column='SubmittedFreeAnswer', null=True)),
                ('answer_id', models.ForeignKey(blank=True, db_column='AnswerId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Answer')),
                ('participant_id', models.ForeignKey(db_column='ParticipantId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Participant')),
                ('task_id', models.ForeignKey(db_column='TaskId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Task')),
            ],
            options={
                'db_table': 'TaskParticipant',
                'unique_together': {('participant_id', 'task_id')},
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireParticipant',
            fields=[
                ('questionnaire_participant_id', models.AutoField(db_column='QuestionnaireParticipantId', primary_key=True, serialize=False)),
                ('questionnaire_start', models.TimeField(db_column='QuestionnaireStart')),
                ('questionnaire_finish', models.TimeField(db_column='QuestionnaireFinish')),
                ('time_spent', models.TimeField(blank=True, db_column='TimeSpent', null=True)),
                ('satisfaction', models.TextField(blank=True, db_column='Satisfaction', null=True)),
                ('participant_id', models.ForeignKey(db_column='ParticipantId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Participant')),
                ('questionnaire_id', models.ForeignKey(db_column='QuestionnaireId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Questionnaire')),
            ],
            options={
                'db_table': 'QuestionnaireParticipant',
                'unique_together': {('questionnaire_id', 'participant_id')},
            },
        ),
        migrations.CreateModel(
            name='ParticipantLanguageProficiency',
            fields=[
                ('participant_language_id', models.AutoField(db_column='ParticipantLanguageId', primary_key=True, serialize=False)),
                ('proficiency', models.IntegerField(db_column='Proficiency')),
                ('language_id', models.ForeignKey(db_column='LanguageId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Language')),
                ('participant_id', models.ForeignKey(db_column='ParticipantId', on_delete=django.db.models.deletion.DO_NOTHING, to='rtl_ltr.Participant')),
            ],
            options={
                'db_table': 'ParticipantLanguageProficiency',
                'unique_together': {('participant_id', 'language_id')},
            },
        ),
    ]
